<body class="login">
<!-- BEGIN SIDEBAR TOGGLER BUTTON -->
<div class="menu-toggler sidebar-toggler">
</div>
<!-- END SIDEBAR TOGGLER BUTTON -->
<!-- BEGIN LOGO -->
<div class="logo">
	<a href="/"><img src="https://s3.amazonaws.com/coffeemobile/logo-small.png" /></a>
</div>
<!-- END LOGO -->
<!-- BEGIN LOGIN -->
<div class="content">
	<!-- BEGIN LOCATION PART 1 FORM -->
	<form action="/signup/<%=invite_url%>" class="forget-form" method="post" novalidate="novalidate" style="display: block;">
		<!-- BEGIN NAME -->
		<input type="hidden" name="step" value="LOC">
		<div style="">
			<h3>Add Location</h3>
			<div class="form-group">
				<label class="control-label visible-ie8 visible-ie9">Location</label>
				<input class="form-control placeholder-no-fix" type="text" placeholder="Location Address/Name" id="pac-input" />
			</div>
			<p class="hint">
				Enter your location name or address, select from the dropdown to locate.
			</p>
			<div id="map-canvas" style="height: 188px;">
				
			</div>
			<div class="form-group">
			
			</div>
			<div class="form-actions">
				<!--<button type="submit" id="register-skip-btn" class="btn btn-default">Skip</button>-->
				<button type="button" id="register-submit-btn" class="btn btn-success uppercase pull-right">Next</button>
			</div>
		</div>
		<!-- END NAME -->
	</form>	
  <!-- END LOCATION PART 1 FORM -->

  <!-- BEGIN LOCATION PART 1 FORM -->
  <form action="/signup/<%=invite_url%>" class="forget-form" method="post" novalidate="novalidate" style="display: block;">
    <!-- BEGIN NAME -->
    <input type="hidden" name="step" value="LOC">
    <div style="">
      <h3>Add Location</h3>
      <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">Network</label>
        <input class="form-control placeholder-no-fix" type="text" placeholder="" id="pac-input" />
      </div>
      <p class="hint">
        Enter your location name or address, select from the dropdown to locate.
      </p>
      <div id="map-canvas" style="height: 188px;">
        
      </div>
      <div class="form-group">
      
      </div>
      <div class="form-actions">
        <!--<button type="submit" id="register-skip-btn" class="btn btn-default">Skip</button>-->
        <button type="button" id="register-submit-btn" class="btn btn-success uppercase pull-right">Next</button>
      </div>
    </div>
    <!-- END NAME -->
  </form> 
  <!-- END LOCATION PART 1 FORM -->
</div>
<div class="copyright">
	 2014 Â© Coffee Enterprise. All Rights Reserved
</div>
<!-- END LOGIN -->
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>
<%= javascript_include_tag "login_page" %>
<script>
var LocationModel = function() {
  this.Lng = null;
  this.Lat = null;
  this.UnitNumber = null;
  this.StreetNumber = null;
  this.Address = null;
  this.City = null;
  this.Province = null;
  this.Country = null;
  this.Postal = null;
  this.FormattedAddress = null;
}
var location = new LocationModel();

jQuery(document).ready(function() {     
	Metronic.init(); // init metronic core components
	Layout.init(); // init current layout
	Login.init();
	initialize();
});

$("#register-submit-btn").click(function() {
  validateLocation();
});

function validateLocation() {
  if(!location.StreetNumber) {

  }
}

function initialize() {
  var markers = [];
  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
	if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude);

      var infowindow = new google.maps.InfoWindow({
        map: map,
        position: pos,
        content: 'Your current location.'
      });

      map.setCenter(pos);
    }, function() {
      handleNoGeolocation(true);
    });
  } else {
    // Browser doesn't support Geolocation
    handleNoGeolocation(false);
  }
  map.setZoom(15); 

  // Create the search box and link it to the UI element.
  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));
  //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  var searchBox = new google.maps.places.SearchBox(
    /** @type {HTMLInputElement} */(input));

  // [START region_getplaces]
  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }
    for (var i = 0, marker; marker = markers[i]; i++) {
      marker.setMap(null);
    }

    // For each place, get the icon, place name, and location.
    markers = [];
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {
      var image = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };
      fillAddressData(place);
      // Create a marker for each place.
      var marker = new google.maps.Marker({
        map: map,
        icon: image,
        title: place.name,
        position: place.geometry.location
      });

      markers.push(marker);

      bounds.extend(place.geometry.location);
    }

    map.fitBounds(bounds);
  });
  // [END region_getplaces]

  // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
  google.maps.event.addListener(map, 'bounds_changed', function() {
  	if (map.getZoom() > 15) map.setZoom(15); 
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });
}

google.maps.event.addDomListener(window, 'load', initialize);

function fillAddressData(place) {
  location = new LocationModel();

  if(place.address_components.types[0] == "street_number") {
    location.StreetNumber = place.address_components.long_name;
  }
  if(place.address_components.types[0] == "route") {
    location.Address = place.address_components.long_name; 
  }
  if(place.address_components.types[0] == "locality") {
    location.City = place.address_components.long_name;
  }
  if(location.City == null && place.address_components.types[0] == "administrative_area_level_3") {
    location.City = place.address_components.long_name;
  }
  if(place.address_components.types[0] == "administrative_area_level_1") {
    location.Province = place.address_components.short_name;
  }
  if(place.address_components.types[0] == "country") {
    location.Country = place.address_components.short_name;
  }
  if(place.address_components.types[0] == "postal_code") {
    location.Postal = place.address_components.long_name;
  }
  location.FormattedAddress = place.formatted_address;
  location.Lat = place.geometry.location.k;
  location.Lng = place.geometry.location.B;
}
</script>
<!-- END JAVASCRIPTS -->
</body>